package com.example.myapplication;

import android.content.Intent;
import android.os.Bundle;
import android.text.TextUtils;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;

import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.ValueEventListener;

import java.util.Random;

public class RegistrationActivity extends AppCompatActivity {

    EditText etName, etPassword, etRePassword;
    Button btnRegister, btnSignIn;
    DatabaseReference databaseReference;
    Random random;
    TextView adminlogin;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_registration);

        // Initialize Firebase  Reference
        databaseReference = FirebaseDatabase.getInstance().getReference("Users");
        random = new Random();

        // Initialize UI Components
        etName = findViewById(R.id.etname);
        etPassword = findViewById(R.id.etpassword);
        etRePassword = findViewById(R.id.etrepassword);
        btnRegister = findViewById(R.id.btnRegister);
        btnSignIn = findViewById(R.id.signbtn);
        adminlogin = findViewById(R.id.adminlogin);


        // Register Button Click Listener
        btnRegister.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                registerUser();
            }
        });

        // Sign In Button Click Listener
        btnSignIn.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                startActivity(new Intent(RegistrationActivity.this,LoginActivity.class));
            }
        });
        // signin admin
        adminlogin.setOnClickListener(new View.OnClickListener(){
            @Override
            public void onClick(View v){
                startActivity(new Intent(RegistrationActivity.this, AdminLoginActivity.class));
            }
        });

    }

    private void registerUser() {
        String name = etName.getText().toString().trim();
        String password = etPassword.getText().toString().trim();
        String rePassword = etRePassword.getText().toString().trim();

        // Validation
        if (TextUtils.isEmpty(name)) {
            etName.setError("Enter name");
            return;
        }
        if (TextUtils.isEmpty(password)) {
            etPassword.setError("Enter password");
            return;
        }
        if (!password.equals(rePassword)) {
            etRePassword.setError("Passwords do not match");
            return;
        }

        // Generate base userId (lowercase, no spaces)
        String baseUserId = name.toLowerCase().replaceAll("\\s+", "");

        checkIfUserExists(baseUserId, name, password);
    }

    private void checkIfUserExists(String baseUserId, String name, String password) {
        DatabaseReference userRef = databaseReference.child(baseUserId);

        userRef.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot snapshot) {
                if (snapshot.exists()) {
                    User existingUser = snapshot.getValue(User.class);
                    if (existingUser != null && existingUser.getPassword().equals(password)) {
                        // ✅ User already exists with the same password
                        Toast.makeText(RegistrationActivity.this, "User already exists, please sign in", Toast.LENGTH_LONG).show();
                    } else {
                        // ❌ Username exists but password does not match -> Create a unique userId
                        findAvailableUserId(baseUserId, name, password);
                    }
                } else {
                    // ✅ Username does not exist -> Register user
                    saveUserToDatabase(baseUserId, name, password);
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError error) {
                Toast.makeText(RegistrationActivity.this, "Database error: " + error.getMessage(), Toast.LENGTH_SHORT).show();
            }
        });
    }

    private void findAvailableUserId(String baseUserId, String name, String password) {
        int randomNum = 100 + random.nextInt(900); // Generate a 3-digit number (100-999)
        String newUserId = baseUserId + randomNum;

        databaseReference.child(newUserId).addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot snapshot) {
                if (!snapshot.exists()) {
                    saveUserToDatabase(newUserId, name, password);
                } else {
                    findAvailableUserId(baseUserId, name, password); // Try again if userId exists
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError error) {
                Toast.makeText(RegistrationActivity.this, "Database error: " + error.getMessage(), Toast.LENGTH_SHORT).show();
            }
        });
    }

    private void saveUserToDatabase(String userId, String name, String password) {
        User user = new User(userId, name, password);
        databaseReference.child(userId).setValue(user)
                .addOnSuccessListener(aVoid -> {
                    Toast.makeText(RegistrationActivity.this, "Registration Successful!", Toast.LENGTH_SHORT).show();
                    startActivity(new Intent(RegistrationActivity.this,LoginActivity.class));
                    finish();
                })
                .addOnFailureListener(e -> {
                    Toast.makeText(RegistrationActivity.this, "Failed to register. Try again!", Toast.LENGTH_SHORT).show();
                });
    }
}
